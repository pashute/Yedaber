/*
 * File: app/controller/KbController.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Wiztalk.controller.KbController', {
    extend: 'Ext.app.Controller',
    alias: 'controller.kbController',
    config: {
        control: {
            "#kbButton1": {
                tap: 'onKbButtonTap'
            },
            "#kbButton2": {
                tap: 'onKbButtonTap'
            },
            "#kbButton3": {
                tap: 'onKbButtonTap'
            },
            "#kbButton4": {
                tap: 'onKbButtonTap'
            },
            "#kbButton5": {
                tap: 'onKbButtonTap'
            },
            "#kbButton6": {
                tap: 'onKbButtonTap'
            },
            "#kbButton7": {
                tap: 'onKbButtonTap'
            },
            "#kbButton8": {
                tap: 'onKbButtonTap'
            },
            "#kbButton9": {
                tap: 'onKbButtonTap'
            },
            "#kbButton0": {
                tap: 'onKbButtonTap',
                taphold: 'onKbButtonTaphold'
            },
            "#kbButtonStar": {
                tap: 'onKbButtonTap',
                taphold: 'onKbButtonTaphold'
            },
            "#kbButtonHash": {
                tap: 'onKbButtonTap',
                taphold: 'onKbButtonTaphold'
            },
            "#kbButtonDel": {
                tap: 'onKbButtonDel'
            },


            "#kbButtonCompareOrAddContact": {
                tap: 'onKbButtonCompare'
            },
            "#kbButtonSend": {
                tap: 'onKbButtonSend'
            }
        }
    },

    onKbButtonTap: function(button, event, options) {
        // fill this in intellij moshezzz
        if (button.itemId == 'kbButton0') addDigit(0);
        else if (button.itemId == 'kbButton1') addDigit('1');
        else if (button.itemId == 'kbButton2') addDigit('2');
        else if (button.itemId == 'kbButton3') addDigit('3');
        else if (button.itemId == 'kbButton4') addDigit('4');
        else if (button.itemId == 'kbButton5') addDigit('5');
        else if (button.itemId == 'kbButton6') addDigit('6');
        else if (button.itemId == 'kbButton7') addDigit('7');
        else if (button.itemId == 'kbButton8') addDigit('8');
        else if (button.itemId == 'kbButton9') addDigit('9');
        else if (button.itemId == 'kbButtonHash') addDigit ('#');
        else if (button.itemId == 'kbButtonStar') addDigit ('Star');

    },

    onKbButtonTapHold: function(button, e, options) {
        if (button.itemId == 'kbButton0') addDigit('+');
        else if (button.itemId == 'kbButtonHash') addDigit(',');
        else if (button.itemId == 'kbButtonStar') addDigit('p');
    },

    onKbButtonDel: function(button, e, options) {
         // delete the last digit
    },

    onKbButtonCompare: function(button, e, options){
            //tbd
    },

    onKbButtonSend: function(button, e, options){
        // tbd
    }
});
function addDigit(digit) {
    console.log("adding digit " + digit);
    // add a digit
    phoneNumLabel.text += digit;
    // play a dtmf
    reformatPhoneNumber();
    //fire setComparisonInfoEvent
    compareCarriers();
}

function reformatPhoneNumber(){
    // take current number and put it in format
    // +aaa (bb) ccc-dddd
    // user the regular expression in workflowy
}

function compareCarriers(){
    // tbd
}
